version: "3.10"

networks:
  base_proxy:
    external: true
  seafile:

services:
  seafile-db:
    image: mariadb:10.8
    container_name: seafile-mysql
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_LOG_CONSOLE=true
    volumes:
      - ${LOCAL_DATA_DIR}/db:/var/lib/mysql
    networks:
      - seafile
    restart: unless-stopped
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=$$MYSQL_ROOT_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 5s

  memcached:
    image: memcached:1.6.18
    container_name: seafile-memcached
    entrypoint: memcached -m 256
    networks:
      - seafile
    restart: unless-stopped

  seafile:
    image: seafileltd/seafile-mc:latest
    container_name: seafile
    volumes:
      - ./data:/shared
    environment:
      - DB_HOST=seafile-db
      - DB_ROOT_PASSWD=$MYSQL_ROOT_PASSWORD
      - TIME_ZONE=$TZ
      - SEAFILE_ADMIN_EMAIL=$ADMIN_EMAIL
      - SEAFILE_ADMIN_PASSWORD=$ADMIN_PASSWORD
      - SEAFILE_SERVER_LETSENCRYPT=false  # Managed by Traefik instead
      - SEAFILE_SERVER_HOSTNAME=$APP_DOMAIN
    depends_on:
      - seafile-db
      - memcached
    networks:
      - seafile
      - base_proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.middlewares.seafile-web-redirect.redirectscheme.scheme: https
      traefik.http.services.seafile.loadbalancer.passhostheader: true
      traefik.http.services.seafile.loadbalancer.server.port: 80
      # Web
      traefik.http.routers.seafile-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.seafile-insecure.entrypoints: web
      traefik.http.routers.seafile-insecure.service: seafile
      traefik.http.routers.seafile-insecure.middlewares: seafile-web-redirect
      # Websecure
      traefik.http.routers.seafile.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.seafile.entrypoints: websecure
      traefik.http.routers.seafile.service: seafile
      traefik.http.routers.seafile.tls.certresolver: myresolver
